import { Context } from 'koa';
import { File } from 'formidable';
export declare type BodyBase = number | string | object | File;
export declare type BodyArray = BodyBase[];
export interface BodyObject {
    [key: string]: BodyBase | BodyArray;
}
export declare type Body = BodyBase | BodyArray | BodyObject;
export interface Options {
    readonly encoding?: string;
    readonly error?: (err: Error, ctx: Context) => void;
    json?: string | string[];
    multipart?: string | string[];
    text?: string | string[];
    urlencoded?: string | string[];
}
declare module 'koa' {
    interface Request {
        body?: Body;
    }
}
export { File };
